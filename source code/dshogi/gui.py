# -*- coding: iso-8859-15 -*-
# generated by wxGlade 0.6.3 on Fri Sep 25 21:57:47 2009

import wx
import rule as r
import autoplay as cpu
import os
import time

Menu_Load_Kifu,   Menu_Save_Kifu, Menu_Exit=(10, 11, 12)
Menu_How_to_play, Menu_About               =(20, 21)
version='0.1'

def bltKoma(bmps, info):
  for x in ['A', 'B', 'C']:
    for y in ['1', '2', '3', '4']:
      pos=x+y
      k=info.board.getKoma(pos)
      if k: bmp=info.bmprc[r.Koma(k.getOwner(), k.getType(), 'MOCHI')]
      else: bmp=info.bmprc[None]
      bmps[pos].SetBitmapLabel(bmp)
  mss=info.board.getMochigomas(r.SENTE)
  for i in range(0,len(mss)): bmps['MOCHISENTE'][i].SetBitmapLabel(info.bmprc[mss[i]])
  for i in range(len(mss),8): bmps['MOCHISENTE'][i].SetBitmapLabel(info.bmprc[None])
  mgs=info.board.getMochigomas(r.GOTE)
  for i in range(0,len(mgs)): bmps['MOCHIGOTE'][i].SetBitmapLabel(info.bmprc[mgs[i]])
  for i in range(len(mgs),8): bmps['MOCHIGOTE'][i].SetBitmapLabel(info.bmprc[None])

class GameInfo():
  def __init__(self, senteStr=None, goteStr=None):
    if senteStr=='Human':         self.sente=None
    elif senteStr=='CPU(easy)':   self.sente=cpu.Autoplay(r.SENTE, 1)
    elif senteStr=='CPU(normal)': self.sente=cpu.Autoplay(r.SENTE, 3)
    elif senteStr=='CPU(hard)':   self.sente=cpu.Autoplay(r.SENTE, 5)
    else:                         self.sente=None
    if goteStr=='Human':          self.gote=None
    elif goteStr=='CPU(easy)':    self.gote=cpu.Autoplay(r.GOTE, 1)
    elif goteStr=='CPU(normal)':  self.gote=cpu.Autoplay(r.GOTE, 3)
    elif goteStr=='CPU(hard)':    self.gote=cpu.Autoplay(r.GOTE, 5)
    else:                         self.gote=None
    self.step =1
    self.boards=[r.Board()]
    self.board=self.boards[-1]
    self.kifu=[]
    self.selPos=None
    self.bmprc={}
    for turn in [r.SENTE, r.GOTE]:
      for type in [r.HIYOKO, r.NIWATORI, r.ZOU, r.KIRIN, r.RAION]:
        k=r.Koma(turn, type, 'MOCHI')
        path=os.path.join(os.path.dirname(__file__), 'images', turn+type+'.png')
        self.bmprc[k]=wx.Bitmap(path)
    self.bmprc[None]=wx.EmptyBitmapRGBA(256, 256, 255, 255, 255)

  def isHuman(self, turn):
    if turn==r.SENTE:  return self.sente==None
    elif turn==r.GOTE: return self.gote==None
    else: raise ValueError('Turn is one of [SENTE, GOTE].')

  def isCPU(self, turn):
    return not self.isHuman(turn)


class GameFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: GameFrame.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.panel_info = wx.Panel(self, -1)
        self.panel_board = wx.Panel(self, -1)
        
        # Menu Bar
        self.frame_game_menubar = wx.MenuBar()
        wxglade_tmp_menu = wx.Menu()
        wxglade_tmp_menu.Append(Menu_Load_Kifu, "&Load Kifu...", "", wx.ITEM_NORMAL)
        wxglade_tmp_menu.Append(Menu_Save_Kifu, "&Save Kifu...", "", wx.ITEM_NORMAL)
        wxglade_tmp_menu.AppendSeparator()
        wxglade_tmp_menu.Append(Menu_Exit, "E&xit", "", wx.ITEM_NORMAL)
        self.frame_game_menubar.Append(wxglade_tmp_menu, "&File")
        wxglade_tmp_menu = wx.Menu()
        wxglade_tmp_menu.Append(Menu_How_to_play, "How &to play...", "", wx.ITEM_NORMAL)
        wxglade_tmp_menu.Append(Menu_About, "&About...", "", wx.ITEM_NORMAL)
        self.frame_game_menubar.Append(wxglade_tmp_menu, "&Help")
        self.SetMenuBar(self.frame_game_menubar)
        # Menu Bar end
        self.frame_game_statusbar = self.CreateStatusBar(1, 0)
        self.bitmap_button_mochigoma_gote_1 = wx.BitmapButton(self, -1, wx.NullBitmap)
        self.bitmap_button_mochigoma_gote_2 = wx.BitmapButton(self, -1, wx.NullBitmap)
        self.bitmap_button_mochigoma_gote_3 = wx.BitmapButton(self, -1, wx.NullBitmap)
        self.bitmap_button_mochigoma_gote_4 = wx.BitmapButton(self, -1, wx.NullBitmap)
        self.bitmap_button_mochigoma_gote_5 = wx.BitmapButton(self, -1, wx.NullBitmap)
        self.bitmap_button_mochigoma_gote_6 = wx.BitmapButton(self, -1, wx.NullBitmap)
        self.bitmap_button_mochigoma_gote_7 = wx.BitmapButton(self, -1, wx.NullBitmap)
        self.bitmap_button_mochigoma_gote_8 = wx.BitmapButton(self, -1, wx.NullBitmap)
        self.bitmap_button_a1 = wx.BitmapButton(self.panel_board, -1, wx.NullBitmap)
        self.bitmap_button_b1 = wx.BitmapButton(self.panel_board, -1, wx.NullBitmap)
        self.bitmap_button_c1 = wx.BitmapButton(self.panel_board, -1, wx.NullBitmap)
        self.bitmap_button_a2 = wx.BitmapButton(self.panel_board, -1, wx.NullBitmap)
        self.bitmap_button_b2 = wx.BitmapButton(self.panel_board, -1, wx.NullBitmap)
        self.bitmap_button_c2 = wx.BitmapButton(self.panel_board, -1, wx.NullBitmap)
        self.bitmap_button_a3 = wx.BitmapButton(self.panel_board, -1, wx.NullBitmap)
        self.bitmap_button_b3 = wx.BitmapButton(self.panel_board, -1, wx.NullBitmap)
        self.bitmap_button_c3 = wx.BitmapButton(self.panel_board, -1, wx.NullBitmap)
        self.bitmap_button_a4 = wx.BitmapButton(self.panel_board, -1, wx.NullBitmap)
        self.bitmap_button_b4 = wx.BitmapButton(self.panel_board, -1, wx.NullBitmap)
        self.bitmap_button_c4 = wx.BitmapButton(self.panel_board, -1, wx.NullBitmap)
        self.bitmap_button_mochigoma_sente_8 = wx.BitmapButton(self, -1, wx.NullBitmap)
        self.bitmap_button_mochigoma_sente_7 = wx.BitmapButton(self, -1, wx.NullBitmap)
        self.bitmap_button_mochigoma_sente_6 = wx.BitmapButton(self, -1, wx.NullBitmap)
        self.bitmap_button_mochigoma_sente_5 = wx.BitmapButton(self, -1, wx.NullBitmap)
        self.bitmap_button_mochigoma_sente_4 = wx.BitmapButton(self, -1, wx.NullBitmap)
        self.bitmap_button_mochigoma_sente_3 = wx.BitmapButton(self, -1, wx.NullBitmap)
        self.bitmap_button_mochigoma_sente_2 = wx.BitmapButton(self, -1, wx.NullBitmap)
        self.bitmap_button_mochigoma_sente_1 = wx.BitmapButton(self, -1, wx.NullBitmap)
        self.radio_box_sente = wx.RadioBox(self.panel_info, -1, "Sente type", choices=["Human", "CPU(easy)", "CPU(normal)", "CPU(hard)"], majorDimension=0, style=wx.RA_SPECIFY_ROWS)
        self.radio_box_gote = wx.RadioBox(self.panel_info, -1, "Gote type", choices=["Human", "CPU(easy)", "CPU(normal)", "CPU(hard)"], majorDimension=0, style=wx.RA_SPECIFY_ROWS)
        self.button_start = wx.Button(self.panel_info, -1, "Start Game")
        self.button_end = wx.Button(self.panel_info, -1, "End Game")
        self.button_prev = wx.Button(self.panel_info, -1, "<")
        self.button_next = wx.Button(self.panel_info, -1, ">")

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_MENU, self.menuLoadKifu, id=Menu_Load_Kifu)
        self.Bind(wx.EVT_MENU, self.menuSaveKifu, id=Menu_Save_Kifu)
        self.Bind(wx.EVT_MENU, self.menuExit, id=Menu_Exit)
        self.Bind(wx.EVT_MENU, self.menuHowToPlay, id=Menu_How_to_play)
        self.Bind(wx.EVT_MENU, self.menuAbout, id=Menu_About)
        self.Bind(wx.EVT_BUTTON, self.pushMochigomaGote1, self.bitmap_button_mochigoma_gote_1)
        self.Bind(wx.EVT_BUTTON, self.pushMochigomaGote2, self.bitmap_button_mochigoma_gote_2)
        self.Bind(wx.EVT_BUTTON, self.pushMochigomaGote3, self.bitmap_button_mochigoma_gote_3)
        self.Bind(wx.EVT_BUTTON, self.pushMochigomaGote4, self.bitmap_button_mochigoma_gote_4)
        self.Bind(wx.EVT_BUTTON, self.pushMochigomaGote5, self.bitmap_button_mochigoma_gote_5)
        self.Bind(wx.EVT_BUTTON, self.pushMochigomaGote6, self.bitmap_button_mochigoma_gote_6)
        self.Bind(wx.EVT_BUTTON, self.pushMochigomaGote7, self.bitmap_button_mochigoma_gote_7)
        self.Bind(wx.EVT_BUTTON, self.pushMochigomaGote8, self.bitmap_button_mochigoma_gote_8)
        self.Bind(wx.EVT_BUTTON, self.pushA1, self.bitmap_button_a1)
        self.Bind(wx.EVT_BUTTON, self.pushB1, self.bitmap_button_b1)
        self.Bind(wx.EVT_BUTTON, self.pushC1, self.bitmap_button_c1)
        self.Bind(wx.EVT_BUTTON, self.pushA2, self.bitmap_button_a2)
        self.Bind(wx.EVT_BUTTON, self.pushB2, self.bitmap_button_b2)
        self.Bind(wx.EVT_BUTTON, self.pushC2, self.bitmap_button_c2)
        self.Bind(wx.EVT_BUTTON, self.pushA3, self.bitmap_button_a3)
        self.Bind(wx.EVT_BUTTON, self.pushB3, self.bitmap_button_b3)
        self.Bind(wx.EVT_BUTTON, self.pushC3, self.bitmap_button_c3)
        self.Bind(wx.EVT_BUTTON, self.pushA4, self.bitmap_button_a4)
        self.Bind(wx.EVT_BUTTON, self.pushB4, self.bitmap_button_b4)
        self.Bind(wx.EVT_BUTTON, self.pushC4, self.bitmap_button_c4)
        self.Bind(wx.EVT_BUTTON, self.pushMochigomaSente8, self.bitmap_button_mochigoma_sente_8)
        self.Bind(wx.EVT_BUTTON, self.pushMochigomaSente7, self.bitmap_button_mochigoma_sente_7)
        self.Bind(wx.EVT_BUTTON, self.pushMochigomaSente6, self.bitmap_button_mochigoma_sente_6)
        self.Bind(wx.EVT_BUTTON, self.pushMochigomaSente5, self.bitmap_button_mochigoma_sente_5)
        self.Bind(wx.EVT_BUTTON, self.pushMochigomaSente4, self.bitmap_button_mochigoma_sente_4)
        self.Bind(wx.EVT_BUTTON, self.pushMochigomaSente3, self.bitmap_button_mochigoma_sente_3)
        self.Bind(wx.EVT_BUTTON, self.pushMochigomaSente2, self.bitmap_button_mochigoma_sente_2)
        self.Bind(wx.EVT_BUTTON, self.pushMochigomaSente1, self.bitmap_button_mochigoma_sente_1)
        self.Bind(wx.EVT_BUTTON, self.pushStart, self.button_start)
        self.Bind(wx.EVT_BUTTON, self.pushEnd, self.button_end)
        self.Bind(wx.EVT_BUTTON, self.pushPrev, self.button_prev)
        self.Bind(wx.EVT_BUTTON, self.pushNext, self.button_next)
        # end wxGlade
        self.bmps={'A1': self.bitmap_button_a1, 'B1': self.bitmap_button_b1, 'C1': self.bitmap_button_c1,
                   'A2': self.bitmap_button_a2, 'B2': self.bitmap_button_b2, 'C2': self.bitmap_button_c2,
                   'A3': self.bitmap_button_a3, 'B3': self.bitmap_button_b3, 'C3': self.bitmap_button_c3,
                   'A4': self.bitmap_button_a4, 'B4': self.bitmap_button_b4, 'C4': self.bitmap_button_c4,
                   'MOCHISENTE': [self.bitmap_button_mochigoma_sente_1, self.bitmap_button_mochigoma_sente_2,
                                  self.bitmap_button_mochigoma_sente_3, self.bitmap_button_mochigoma_sente_4,
                                  self.bitmap_button_mochigoma_sente_5, self.bitmap_button_mochigoma_sente_6,
                                  self.bitmap_button_mochigoma_sente_7, self.bitmap_button_mochigoma_sente_8],
                   'MOCHIGOTE': [self.bitmap_button_mochigoma_gote_1, self.bitmap_button_mochigoma_gote_2,
                                 self.bitmap_button_mochigoma_gote_3, self.bitmap_button_mochigoma_gote_4,
                                 self.bitmap_button_mochigoma_gote_5, self.bitmap_button_mochigoma_gote_6,
                                 self.bitmap_button_mochigoma_gote_7, self.bitmap_button_mochigoma_gote_8]}
        self.info=GameInfo()

    def __set_properties(self):
        # begin wxGlade: GameFrame.__set_properties
        self.SetTitle("dshogi")
        self.frame_game_statusbar.SetStatusWidths([-1])
        # statusbar fields
        frame_game_statusbar_fields = ["Select Sente/Gote type and push start."]
        for i in range(len(frame_game_statusbar_fields)):
            self.frame_game_statusbar.SetStatusText(frame_game_statusbar_fields[i], i)
        self.bitmap_button_mochigoma_gote_1.Enable(False)
        self.bitmap_button_mochigoma_gote_1.SetSize(self.bitmap_button_mochigoma_gote_1.GetBestSize())
        self.bitmap_button_mochigoma_gote_2.Enable(False)
        self.bitmap_button_mochigoma_gote_2.SetSize(self.bitmap_button_mochigoma_gote_2.GetBestSize())
        self.bitmap_button_mochigoma_gote_3.Enable(False)
        self.bitmap_button_mochigoma_gote_3.SetSize(self.bitmap_button_mochigoma_gote_3.GetBestSize())
        self.bitmap_button_mochigoma_gote_4.Enable(False)
        self.bitmap_button_mochigoma_gote_4.SetSize(self.bitmap_button_mochigoma_gote_4.GetBestSize())
        self.bitmap_button_mochigoma_gote_5.Enable(False)
        self.bitmap_button_mochigoma_gote_5.SetSize(self.bitmap_button_mochigoma_gote_5.GetBestSize())
        self.bitmap_button_mochigoma_gote_6.Enable(False)
        self.bitmap_button_mochigoma_gote_6.SetSize(self.bitmap_button_mochigoma_gote_6.GetBestSize())
        self.bitmap_button_mochigoma_gote_7.Enable(False)
        self.bitmap_button_mochigoma_gote_7.SetSize(self.bitmap_button_mochigoma_gote_7.GetBestSize())
        self.bitmap_button_mochigoma_gote_8.Enable(False)
        self.bitmap_button_mochigoma_gote_8.SetSize(self.bitmap_button_mochigoma_gote_8.GetBestSize())
        self.bitmap_button_a1.Enable(False)
        self.bitmap_button_a1.SetSize(self.bitmap_button_a1.GetBestSize())
        self.bitmap_button_b1.Enable(False)
        self.bitmap_button_b1.SetSize(self.bitmap_button_b1.GetBestSize())
        self.bitmap_button_c1.Enable(False)
        self.bitmap_button_c1.SetSize(self.bitmap_button_c1.GetBestSize())
        self.bitmap_button_a2.Enable(False)
        self.bitmap_button_a2.SetSize(self.bitmap_button_a2.GetBestSize())
        self.bitmap_button_b2.Enable(False)
        self.bitmap_button_b2.SetSize(self.bitmap_button_b2.GetBestSize())
        self.bitmap_button_c2.Enable(False)
        self.bitmap_button_c2.SetSize(self.bitmap_button_c2.GetBestSize())
        self.bitmap_button_a3.Enable(False)
        self.bitmap_button_a3.SetSize(self.bitmap_button_a3.GetBestSize())
        self.bitmap_button_b3.Enable(False)
        self.bitmap_button_b3.SetSize(self.bitmap_button_b3.GetBestSize())
        self.bitmap_button_c3.Enable(False)
        self.bitmap_button_c3.SetSize(self.bitmap_button_c3.GetBestSize())
        self.bitmap_button_a4.Enable(False)
        self.bitmap_button_a4.SetSize(self.bitmap_button_a4.GetBestSize())
        self.bitmap_button_b4.Enable(False)
        self.bitmap_button_b4.SetSize(self.bitmap_button_b4.GetBestSize())
        self.bitmap_button_c4.Enable(False)
        self.bitmap_button_c4.SetSize(self.bitmap_button_c4.GetBestSize())
        self.bitmap_button_mochigoma_sente_8.Enable(False)
        self.bitmap_button_mochigoma_sente_8.SetSize(self.bitmap_button_mochigoma_sente_8.GetBestSize())
        self.bitmap_button_mochigoma_sente_7.Enable(False)
        self.bitmap_button_mochigoma_sente_7.SetSize(self.bitmap_button_mochigoma_sente_7.GetBestSize())
        self.bitmap_button_mochigoma_sente_6.Enable(False)
        self.bitmap_button_mochigoma_sente_6.SetSize(self.bitmap_button_mochigoma_sente_6.GetBestSize())
        self.bitmap_button_mochigoma_sente_5.Enable(False)
        self.bitmap_button_mochigoma_sente_5.SetSize(self.bitmap_button_mochigoma_sente_5.GetBestSize())
        self.bitmap_button_mochigoma_sente_4.Enable(False)
        self.bitmap_button_mochigoma_sente_4.SetSize(self.bitmap_button_mochigoma_sente_4.GetBestSize())
        self.bitmap_button_mochigoma_sente_3.Enable(False)
        self.bitmap_button_mochigoma_sente_3.SetSize(self.bitmap_button_mochigoma_sente_3.GetBestSize())
        self.bitmap_button_mochigoma_sente_2.Enable(False)
        self.bitmap_button_mochigoma_sente_2.SetSize(self.bitmap_button_mochigoma_sente_2.GetBestSize())
        self.bitmap_button_mochigoma_sente_1.Enable(False)
        self.bitmap_button_mochigoma_sente_1.SetSize(self.bitmap_button_mochigoma_sente_1.GetBestSize())
        self.radio_box_sente.SetFocus()
        self.radio_box_sente.SetSelection(0)
        self.radio_box_gote.SetSelection(0)
        self.button_end.Enable(False)
        self.button_prev.Enable(False)
        self.button_next.Enable(False)
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: GameFrame.__do_layout
        sizer_main = wx.BoxSizer(wx.HORIZONTAL)
        sizer_info = wx.BoxSizer(wx.VERTICAL)
        sizer_prevnext = wx.BoxSizer(wx.HORIZONTAL)
        sizer_mochigoma_sente = wx.BoxSizer(wx.VERTICAL)
        grid_sizer_board = wx.GridSizer(4, 3, 0, 0)
        sizer_mochigoma_gote = wx.BoxSizer(wx.VERTICAL)
        sizer_mochigoma_gote.Add(self.bitmap_button_mochigoma_gote_1, 1, wx.EXPAND|wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_mochigoma_gote.Add(self.bitmap_button_mochigoma_gote_2, 1, wx.EXPAND|wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_mochigoma_gote.Add(self.bitmap_button_mochigoma_gote_3, 1, wx.EXPAND|wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_mochigoma_gote.Add(self.bitmap_button_mochigoma_gote_4, 1, wx.EXPAND|wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_mochigoma_gote.Add(self.bitmap_button_mochigoma_gote_5, 1, wx.EXPAND|wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_mochigoma_gote.Add(self.bitmap_button_mochigoma_gote_6, 1, wx.EXPAND|wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_mochigoma_gote.Add(self.bitmap_button_mochigoma_gote_7, 1, wx.EXPAND|wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_mochigoma_gote.Add(self.bitmap_button_mochigoma_gote_8, 1, wx.EXPAND|wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_main.Add(sizer_mochigoma_gote, 1, wx.EXPAND, 0)
        grid_sizer_board.Add(self.bitmap_button_a1, 0, wx.EXPAND|wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_board.Add(self.bitmap_button_b1, 0, wx.EXPAND|wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_board.Add(self.bitmap_button_c1, 0, wx.EXPAND|wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_board.Add(self.bitmap_button_a2, 0, wx.EXPAND|wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_board.Add(self.bitmap_button_b2, 0, wx.EXPAND|wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_board.Add(self.bitmap_button_c2, 0, wx.EXPAND|wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_board.Add(self.bitmap_button_a3, 0, wx.EXPAND|wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_board.Add(self.bitmap_button_b3, 0, wx.EXPAND|wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_board.Add(self.bitmap_button_c3, 0, wx.EXPAND|wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_board.Add(self.bitmap_button_a4, 0, wx.EXPAND|wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_board.Add(self.bitmap_button_b4, 0, wx.EXPAND|wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_board.Add(self.bitmap_button_c4, 0, wx.EXPAND|wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 0)
        self.panel_board.SetSizer(grid_sizer_board)
        sizer_main.Add(self.panel_board, 3, wx.EXPAND, 0)
        sizer_mochigoma_sente.Add(self.bitmap_button_mochigoma_sente_8, 1, wx.EXPAND|wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_mochigoma_sente.Add(self.bitmap_button_mochigoma_sente_7, 1, wx.EXPAND|wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_mochigoma_sente.Add(self.bitmap_button_mochigoma_sente_6, 1, wx.EXPAND|wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_mochigoma_sente.Add(self.bitmap_button_mochigoma_sente_5, 1, wx.EXPAND|wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_mochigoma_sente.Add(self.bitmap_button_mochigoma_sente_4, 1, wx.EXPAND|wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_mochigoma_sente.Add(self.bitmap_button_mochigoma_sente_3, 1, wx.EXPAND|wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_mochigoma_sente.Add(self.bitmap_button_mochigoma_sente_2, 1, wx.EXPAND|wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_mochigoma_sente.Add(self.bitmap_button_mochigoma_sente_1, 1, wx.EXPAND|wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_main.Add(sizer_mochigoma_sente, 1, wx.EXPAND, 0)
        sizer_info.Add(self.radio_box_sente, 3, wx.TOP|wx.BOTTOM|wx.EXPAND, 4)
        sizer_info.Add(self.radio_box_gote, 3, wx.TOP|wx.BOTTOM|wx.EXPAND, 4)
        sizer_info.Add(self.button_start, 1, wx.TOP|wx.BOTTOM|wx.EXPAND, 4)
        sizer_info.Add(self.button_end, 1, wx.TOP|wx.BOTTOM|wx.EXPAND, 4)
        sizer_prevnext.Add(self.button_prev, 1, wx.EXPAND, 0)
        sizer_prevnext.Add(self.button_next, 1, wx.EXPAND, 0)
        sizer_info.Add(sizer_prevnext, 1, wx.TOP|wx.BOTTOM|wx.EXPAND|wx.ALIGN_CENTER_HORIZONTAL, 4)
        self.panel_info.SetSizer(sizer_info)
        sizer_main.Add(self.panel_info, 3, wx.EXPAND, 0)
        self.SetSizer(sizer_main)
        sizer_main.Fit(self)
        self.Layout()
        # end wxGlade

    def pushStart(self, event): # wxGlade: GameFrame.<event_handler>
        self.radio_box_sente.Disable()
        self.radio_box_gote.Disable()
        self.button_start.Disable()
        self.button_prev.Disable()
        self.button_next.Disable()
        self.info=GameInfo(self.radio_box_sente.GetStringSelection(),
                           self.radio_box_gote.GetStringSelection())
        bltKoma(self.bmps, self.info)
        s='Step %s, %s\'s turn.' % (self.info.step, self.info.board.getTurn())
        self.frame_game_statusbar.SetStatusText(s)
        self.Update()
        self.button_end.Enable()
        self.button_end.SetFocus()
        if self.info.isCPU(r.SENTE): self.cpuAction()
        else: self.changeButtonsEnable()

    def pushEnd(self, event): # wxGlade: GameFrame.<event_handler>
        self.button_end.Disable()
        map(lambda x: x.Disable(), filter(lambda x: x.__class__==wx.BitmapButton, self.bmps.itervalues()))
        map(lambda x: x.Disable(), self.bmps['MOCHISENTE'])
        map(lambda x: x.Disable(), self.bmps['MOCHIGOTE'])
        if self.info.board.isEnd(self.info.boards):
          winner=self.info.board.getWinner()
          if winner: s='%s won!' % (winner)
          else: s='Draw game.'
        else:      s='Abort game.'
        self.frame_game_statusbar.SetStatusText(s)
        self.radio_box_sente.Enable()
        self.radio_box_gote.Enable()
        self.button_start.Enable()
        if self.info.step>0:
          self.button_prev.Enable()
        else:
          self.button_prev.Disable()
        if self.info.step<len(self.info.boards)-1:
          self.button_next.Enable()
        else:
          self.button_next.Disable()
        self.radio_box_sente.SetFocus()

    def pushPrev(self, event): # wxGlade: GameFrame.<event_handler>
        if self.info.step>0:
          self.info.step-=1
          self.info.board=self.info.boards[self.info.step]
        bltKoma(self.bmps, self.info)
        if self.info.step>0:
          self.button_prev.Enable()
        else:
          self.button_prev.Disable()
          self.button_start.SetFocus()
        if self.info.step<len(self.info.boards)-1:
          self.button_next.Enable()
        else:
          self.button_next.Disable()

    def pushNext(self, event): # wxGlade: GameFrame.<event_handler>
        if self.info.step<len(self.info.boards)-1:
          self.info.step+=1
          self.info.board=self.info.boards[self.info.step]
        bltKoma(self.bmps, self.info)
        if self.info.step>0:
          self.button_prev.Enable()
        else:
          self.button_prev.Disable()
        if self.info.step<len(self.info.boards)-1:
          self.button_next.Enable()
        else:
          self.button_next.Disable()
          self.button_start.SetFocus()

    def pushA1(self, event): # wxGlade: GameFrame.<event_handler>
        self.pushKoma('A1')

    def pushB1(self, event): # wxGlade: GameFrame.<event_handler>
        self.pushKoma('B1')

    def pushC1(self, event): # wxGlade: GameFrame.<event_handler>
        self.pushKoma('C1')

    def pushA2(self, event): # wxGlade: GameFrame.<event_handler>
        self.pushKoma('A2')

    def pushB2(self, event): # wxGlade: GameFrame.<event_handler>
        self.pushKoma('B2')

    def pushC2(self, event): # wxGlade: GameFrame.<event_handler>
        self.pushKoma('C2')

    def pushA3(self, event): # wxGlade: GameFrame.<event_handler>
        self.pushKoma('A3')

    def pushB3(self, event): # wxGlade: GameFrame.<event_handler>
        self.pushKoma('B3')

    def pushC3(self, event): # wxGlade: GameFrame.<event_handler>
        self.pushKoma('C3')

    def pushA4(self, event): # wxGlade: GameFrame.<event_handler>
        self.pushKoma('A4')

    def pushB4(self, event): # wxGlade: GameFrame.<event_handler>
        self.pushKoma('B4')

    def pushC4(self, event): # wxGlade: GameFrame.<event_handler>
        self.pushKoma('C4')

    def pushKoma(self, pos):
        if not self.info.selPos:
          # Selected moving Koma
          self.info.selPos=pos
        elif pos==self.info.selPos:
          # Canceled moving Koma
          self.info.selPos=None
        else:
          # Action
          if len(self.info.selPos)==2:
            type=self.info.board.getKoma(self.info.selPos).getType()
            a='%s%s%s' % (self.info.selPos, type, pos)
          else:
            ms=self.info.board.getMochigomas(self.info.selPos[5:-1])
            a='%s%s' % (ms[int(self.info.selPos[-1])-1].getType(), pos)
          b=self.info.board.act(a)
          self.info.boards.append(b)
          self.info.board=self.info.boards[-1]
          self.info.kifu.append(a)
          self.info.step+=1
          bltKoma(self.bmps, self.info)
          s='Step %s, %s\'s turn.' % (self.info.step, self.info.board.getTurn())
          self.frame_game_statusbar.SetStatusText(s)
          self.info.selPos=None
        if self.info.board.isEnd(self.info.boards):
          self.pushEnd(None)
          return
        if self.info.isCPU(self.info.board.getTurn()):
          self.cpuAction()
        else:
          self.changeButtonsEnable()

    def pushMochigomaGote1(self, event): # wxGlade: GameFrame.<event_handler>
        self.pushMochigoma('MOCHIGOTE1')

    def pushMochigomaGote2(self, event): # wxGlade: GameFrame.<event_handler>
        self.pushMochigoma('MOCHIGOTE2')

    def pushMochigomaGote3(self, event): # wxGlade: GameFrame.<event_handler>
        self.pushMochigoma('MOCHIGOTE3')

    def pushMochigomaGote4(self, event): # wxGlade: GameFrame.<event_handler>
        self.pushMochigoma('MOCHIGOTE4')

    def pushMochigomaGote5(self, event): # wxGlade: GameFrame.<event_handler>
        self.pushMochigoma('MOCHIGOTE5')

    def pushMochigomaGote6(self, event): # wxGlade: GameFrame.<event_handler>
        self.pushMochigoma('MOCHIGOTE6')

    def pushMochigomaGote7(self, event): # wxGlade: GameFrame.<event_handler>
        self.pushMochigoma('MOCHIGOTE7')

    def pushMochigomaGote8(self, event): # wxGlade: GameFrame.<event_handler>
        self.pushMochigoma('MOCHIGOTE8')

    def pushMochigomaSente8(self, event): # wxGlade: GameFrame.<event_handler>
        self.pushMochigoma('MOCHISENTE8')

    def pushMochigomaSente7(self, event): # wxGlade: GameFrame.<event_handler>
        self.pushMochigoma('MOCHISENTE7')

    def pushMochigomaSente6(self, event): # wxGlade: GameFrame.<event_handler>
        self.pushMochigoma('MOCHISENTE6')

    def pushMochigomaSente5(self, event): # wxGlade: GameFrame.<event_handler>
        self.pushMochigoma('MOCHISENTE5')

    def pushMochigomaSente4(self, event): # wxGlade: GameFrame.<event_handler>
        self.pushMochigoma('MOCHISENTE4')

    def pushMochigomaSente3(self, event): # wxGlade: GameFrame.<event_handler>
        self.pushMochigoma('MOCHISENTE3')

    def pushMochigomaSente2(self, event): # wxGlade: GameFrame.<event_handler>
        self.pushMochigoma('MOCHISENTE2')

    def pushMochigomaSente1(self, event): # wxGlade: GameFrame.<event_handler>
        self.pushMochigoma('MOCHISENTE1')

    def pushMochigoma(self, pos):
        if not self.info.selPos:
          self.info.selPos=pos
          self.changeButtonsEnable()
        elif self.info.selPos==pos:
          self.info.selPos=None
          self.changeButtonsEnable()

    def changeButtonsEnable(self):
        sel=self.info.selPos
        b  =self.info.board
        acts=b.nextActs()
        if not sel:
          posList=filter(lambda x: r.validPos(x), map(lambda x: x[0:2], acts))
          for x in ['A', 'B', 'C']:
            for y in ['1', '2', '3', '4']:
              pos=x+y
              if pos in posList: self.bmps[pos].Enable()
              else:              self.bmps[pos].Disable()
          if b.getTurn()==r.SENTE: ms=b.getMochigomas(r.SENTE)
          else:                    ms=[]
          for i in range(0,len(ms)): self.bmps['MOCHISENTE'][i].Enable()
          for i in range(len(ms),8): self.bmps['MOCHISENTE'][i].Disable()
          if b.getTurn()==r.GOTE: ms=b.getMochigomas(r.GOTE)
          else:                   ms=[]
          for i in range(0,len(ms)): self.bmps['MOCHIGOTE'][i].Enable()
          for i in range(len(ms),8): self.bmps['MOCHIGOTE'][i].Disable()
        elif len(sel)==2:
          posList=map(lambda x: x[4:6], filter(lambda x: x[0:2]==sel, acts))
          posList.append(sel)
          for x in ['A', 'B', 'C']:
            for y in ['1', '2', '3', '4']:
              pos=x+y
              if pos in posList: self.bmps[pos].Enable()
              else:              self.bmps[pos].Disable()
          for i in range(0,8):
            self.bmps['MOCHISENTE'][i].Disable()
            self.bmps['MOCHIGOTE'][i].Disable()
        elif sel[0:5]=='MOCHI':
          for x in ['A', 'B', 'C']:
            for y in ['1', '2', '3', '4']:
              pos=x+y
              if not b.getKoma(pos): self.bmps[pos].Enable()
              else:                  self.bmps[pos].Disable()
          for i in range(0,8):
            self.bmps['MOCHISENTE'][i].Disable()
            self.bmps['MOCHIGOTE'][i].Disable()
          self.bmps[sel[:-1]][int(sel[-1])-1].Enable()
    
    def cpuAction(self):
      while True:
        self.Update()
        time.sleep(0.5)
        if self.info.board.getTurn()==r.SENTE:
          a=self.info.sente.searchAct(self.info.board, self.info.boards)
        else:
          a=self.info.gote.searchAct(self.info.board, self.info.boards)
        if a[1]:
          b=self.info.board.act(a[1])
          self.info.boards.append(b)
          self.info.board=self.info.boards[-1]
          self.info.kifu.append(a[1])
          self.info.step+=1
          bltKoma(self.bmps, self.info)
          s='Step %s, %s\'s turn.' % (self.info.step, self.info.board.getTurn())
          self.SetStatusText(s)
          self.Update()
        else:
          break
        if self.info.board.isEnd(self.info.boards):
          self.pushEnd(None)
          break
        if self.info.isHuman(self.info.board.getTurn()):
          self.changeButtonsEnable()
          break

    def menuLoadKifu(self, event): # wxGlade: GameFrame.<event_handler>
        fd=wx.FileDialog(self, wx.FileSelectorPromptStr, wx.EmptyString, wx.EmptyString, 'dshogi Kifu file(*.dsk)|*.dsk', wx.FD_OPEN)
        ret=fd.ShowModal()
        if ret==wx.ID_OK:
          info=GameInfo()
          f=open(fd.GetPath(), 'r')
          info.kifu=f.readlines()
          f.close()
          info.kifu=filter(lambda x: len(x)>0, map(lambda x: x.strip(), info.kifu))
          info.boards=[r.Board()]
          for a in info.kifu:
            print 'action: '+a
            b=info.boards[-1].act(a)
            if b:
              info.boards.append(b)
            else:
              wx.MessageBox('Error')
              return
          info.step=0
          info.board=info.boards[info.step]
          self.info=info
          self.button_end.Disable()
          map(lambda x: x.Disable(), filter(lambda x: x.__class__==wx.BitmapButton, self.bmps.itervalues()))
          map(lambda x: x.Disable(), self.bmps['MOCHISENTE'])
          map(lambda x: x.Disable(), self.bmps['MOCHIGOTE'])
          bltKoma(self.bmps, self.info)
          s='Kifu data loaded from '+fd.GetFilename()
          self.frame_game_statusbar.SetStatusText(s)
          self.radio_box_sente.Enable()
          self.radio_box_gote.Enable()
          self.button_start.Enable()
          self.button_prev.Disable()
          if self.info.step<len(self.info.boards)-1:
            self.button_next.Enable()
            self.button_next.SetFocus()


    def menuSaveKifu(self, event): # wxGlade: GameFrame.<event_handler>
        kifudata=''
        for a in self.info.kifu: kifudata=kifudata+a+'\n'
        if kifudata=='':
          wx.MessageBox('Error')
        else:
          fd=wx.FileDialog(self, wx.FileSelectorPromptStr, wx.EmptyString, wx.EmptyString, 'dshogi fifu file(*.dsk)|*.dsk', wx.FD_SAVE|wx.FD_OVERWRITE_PROMPT)
          ret=fd.ShowModal()
          if ret==wx.ID_OK:
            if fd.GetPath()[-4:]=='.dsk': path=fd.GetPath()
            else:                         path=fd.GetPath()+'.dsk'
            f=open(path, 'w')
            f.write(kifudata)
            f.close()
            s='Current kifu data saved to '+os.path.basename(path)
            self.frame_game_statusbar.SetStatusText(s)


    def menuExit(self, event): # wxGlade: GameFrame.<event_handler>
        self.Close()

    def menuHowToPlay(self, event): # wxGlade: GameFrame.<event_handler>
        frame_howtoplay=HowtoplayDialog(self, -1, "")
        frame_howtoplay.Show()

    def menuAbout(self, event): # wxGlade: GameFrame.<event_handler>
        frame_about=AboutDialog(self, -1, "")
        frame_about.label_about.SetLabel('''dshogi GUI frontend(version %s)
rule module version %s, autoplay module version %s.
Created by yuto.matsum, licenced by GPLv2.

Dobutsu Shogi designed Madoka Kitao, produced LPSA.''' % (version, r.version, cpu.version))
        frame_about.bitmap_icon.SetBitmap(self.info.bmprc[r.Koma(r.SENTE, r.HIYOKO, 'MOCHI')])
        frame_about.DoLayout()
        frame_about.ShowModal()

# end of class GameFrame


class HowtoplayDialog(wx.Dialog):
    def __init__(self, *args, **kwds):
        # begin wxGlade: HowtoplayDialog.__init__
        kwds["style"] = wx.DEFAULT_DIALOG_STYLE
        wx.Dialog.__init__(self, *args, **kwds)
        self.panel_howtoplay = wx.Panel(self, -1)
        self.button_ok = wx.Button(self.panel_howtoplay, -1, "OK")

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self.pushOk, self.button_ok)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: HowtoplayDialog.__set_properties
        self.SetTitle("How to play dshogi")
        self.button_ok.SetFocus()
        self.button_ok.SetDefault()
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: HowtoplayDialog.__do_layout
        sizer_howtoplay = wx.BoxSizer(wx.VERTICAL)
        sizer_howtoplay_v = wx.BoxSizer(wx.VERTICAL)
        label_howtoplay = wx.StaticText(self.panel_howtoplay, -1, "Dobutsu Shogi is Japanese board game, It's to make Shogi easy.\nAny koma can move to direction of red dot.\nYour victory comes when\n  * you catch oppenent's lion.\n  * your lion arrive deapest line, (If you're Sente, it's '1' line, and you're Gote, it's '4' line.)\n")
        sizer_howtoplay_v.Add(label_howtoplay, 0, wx.ALL|wx.EXPAND, 8)
        sizer_howtoplay_v.Add(self.button_ok, 0, wx.ALL|wx.EXPAND, 8)
        self.panel_howtoplay.SetSizer(sizer_howtoplay_v)
        sizer_howtoplay.Add(self.panel_howtoplay, 1, wx.EXPAND, 0)
        self.SetSizer(sizer_howtoplay)
        sizer_howtoplay.Fit(self)
        self.Layout()
        self.Centre()
        # end wxGlade

    def pushOk(self, event): # wxGlade: HowtoplayDialog.<event_handler>
        self.Close()

# end of class HowtoplayDialog


class AboutDialog(wx.Dialog):
    def __init__(self, *args, **kwds):
        # begin wxGlade: AboutDialog.__init__
        kwds["style"] = wx.DEFAULT_DIALOG_STYLE
        wx.Dialog.__init__(self, *args, **kwds)
        self.panel_about = wx.Panel(self, -1)
        self.bitmap_icon = wx.StaticBitmap(self.panel_about, -1, wx.NullBitmap)
        self.label_about = wx.StaticText(self.panel_about, -1, "dshogi GUI frontend(version %s)\nrule module version %s, autoplay module version %s.\nCreated by yuto.matsum, licenced by GPLv2.\n\nDobutsu Shogi designed Madoka Kitao, produced LPSA.")
        self.button_ok = wx.Button(self.panel_about, -1, "OK")

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self.pushOk, self.button_ok)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: AboutDialog.__set_properties
        self.SetTitle("About dshogi")
        self.button_ok.SetFocus()
        self.button_ok.SetDefault()
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: AboutDialog.__do_layout
        sizer_about = wx.BoxSizer(wx.VERTICAL)
        sizer_about_v = wx.BoxSizer(wx.VERTICAL)
        sizer_about_v.Add(self.bitmap_icon, 0, wx.ALL|wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 8)
        sizer_about_v.Add(self.label_about, 0, wx.ALL|wx.EXPAND, 8)
        sizer_about_v.Add(self.button_ok, 0, wx.ALL|wx.EXPAND, 8)
        self.panel_about.SetSizer(sizer_about_v)
        sizer_about.Add(self.panel_about, 1, wx.EXPAND, 0)
        self.SetSizer(sizer_about)
        sizer_about.Fit(self)
        self.Layout()
        self.Centre()
        # end wxGlade

    def pushOk(self, event): # wxGlade: AboutDialog.<event_handler>
        self.Close()

    def DoLayout(self):
        self.__do_layout()

# end of class AboutDialog


class Gui(wx.App):
    def OnInit(self):
        wx.InitAllImageHandlers()
        frame_game = GameFrame(None, -1, "")
        self.SetTopWindow(frame_game)
        frame_game.Show()
        return 1

# end of class Gui

def run():
    gui = Gui(0)
    gui.MainLoop()

if __name__ == "__main__":
    run()
